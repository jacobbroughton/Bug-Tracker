{"version":3,"sources":["reducers/reducer.js","reducers/index.js","store.js","contexts/auth0-context.js","utils/history.js","components/Navbar/NavBar.js","components/textState.js","components/Home1/Home1.js","components/pages/Home.js","components/Profile1/Profile1.js","components/pages/Profile.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["counter","state","action","type","rootReducer","combineReducers","reducer","store","createStore","axios","require","Auth0Context","CancelToken","source","createContext","useAuth0","useContext","Auth0Provider","auth0Client","isLoading","isAuthenticated","user","config","domain","process","client_id","redirect_uri","window","location","origin","options","allowSignUp","addUser","newUser","randomNum","a","async","given_name","get","email","family_name","nickname","timeout","then","response","console","log","catch","error","findUser","data","uid","getRandomInt","toJSON","initializeAuth0","createAuth0Client","setState","search","includes","handleRedirectCallback","getUser","history","replaceState","document","title","pathname","this","min","max","Math","ceil","floor","random","children","props","configObject","loginWithRedirect","getTokenSilently","getIdTokenClaims","logout","Provider","value","Component","createBrowserHistory","NavBar","className","to","onClick","src","picture","alt","RevealText","Home1","useState","currentId","setId","useEffect","err","Home","useSelector","useDispatch","Profile1","first","setFirst","last","setLast","addName","onSubmit","e","preventDefault","placeholder","name","onChange","target","Profile","PrivateRoute","component","rest","render","AppRouter","exact","path","App","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20f1670e.chunk.js","sourcesContent":["const counter = (state = 1, action) => {\n    switch(action.type) {\n        case \"INCREMENT\":\n            return state + 1;\n        case \"DECREMENT\":\n            return state - 1;\n        default: \n            return state;\n    }\n};\n\nexport default counter;","import reducer from \"./reducer.js\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n    reducer\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/index\";\n\n\nconst store = createStore(\n        rootReducer\n    )\n\n    export default store;\n","import React, { Component, createContext, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\nconst axios = require(\"axios\");\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\nconst uuidv4 = require(\"uuid\");\n\n// Create the context\nexport const Auth0Context = createContext();\n\nexport const useAuth0 = () => useContext(Auth0Context);\n\n// Create a provider\nexport class Auth0Provider extends Component {\n    state = {\n        auth0Client: null,\n        isLoading: true,\n        isAuthenticated: false,\n        user: null\n    };\n\n    config = {\n        domain: process.env.REACT_APP_AUTH0_DOMAIN,\n        client_id: process.env.REACT_APP_AUTH0_CLIENT_ID,\n        redirect_uri: window.location.origin, \n        options: {\n            allowSignUp: false\n        }\n    };\n\n\n    componentDidMount() {\n        this.initializeAuth0();       \n    };\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min\n    }\n\n    addUser = async (newUser, randomNum) => {\n        if(newUser.given_name) {\n            await axios\n                .get(`http://localhost:5002/api/newuser/${randomNum}/${newUser.email}/${newUser.given_name}/${newUser.family_name}/${newUser.nickname}`, { timeout: 200 })\n                .then(response =>  console.log(response))\n                .catch(error => console.log(error)) \n        } else if(newUser.email ) {\n            await axios \n                .get(`http://localhost:5002/api/newuser/${randomNum}/${newUser.email}/${\"null\"}/${\"null\"}/${newUser.nickname}`, { timeout: 200 })\n                .then(response =>  console.log(response))\n                .catch(error => console.log(error)) \n        }\n\n    } \n\n    findUser = async (newUser) => {\n        axios.get(`http://localhost:5002/api/finduser/${newUser.email}`)\n            .then(response => {\n                if(response.data === \"\") {\n                    let uid = this.getRandomInt(100000000, 1000000000); \n                    this.addUser(newUser, uid);\n                } else {\n                    console.log(\"User already exists!\")\n                }\n            }).catch(error => {\n                console.log(error.toJSON());\n            })\n    }\n\n    // Initialize the auth0 library\n    initializeAuth0 = async () => {\n        const auth0Client = await createAuth0Client(this.config);\n\n        this.setState({ auth0Client });\n\n        // Check to see if they have been redirected after login\n        if (window.location.search.includes(\"code=\")) {\n            return this.handleRedirectCallback();\n        };\n\n        const isAuthenticated = await auth0Client.isAuthenticated();\n        const user = isAuthenticated ? await auth0Client.getUser() : null;\n\n        this.setState({ isLoading: false, isAuthenticated, user });\n    };\n\n    // Handles the authentication callback\n    handleRedirectCallback = async () => {\n        this.setState({ isLoading: true });\n\n        await this.state.auth0Client.handleRedirectCallback();\n        const user = await this.state.auth0Client.getUser();\n        this.setState({ user, isAuthenticated: true, isLoading: false })\n\n        await this.findUser(user);\n        // await source.cancel(\"request canceled\")\n\n        window.history.replaceState({}, document.title, window.location.pathname);\n    };\n\n    render() {\n        const { auth0Client, isLoading, isAuthenticated, user } = this.state;\n        const { children } = this.props;\n\n        const configObject = {\n            isLoading,\n            isAuthenticated,\n            user,\n            loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n            getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n            getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n            logout: (...p) => auth0Client.logout(...p)\n        };\n\n        return (\n            <Auth0Context.Provider value={configObject}>\n                {children}\n            </Auth0Context.Provider>\n        )\n    }\n}","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport \"./Navbar.scss\";\n\nconst NavBar = () => {\n\n    const { isLoading, loginWithRedirect, logout, user } = useAuth0();\n\n    return (\n        <nav className=\"navMother\">\n            <div className=\"navMain\">\n                <section className=\"leftNav\">\n                    <div className=\"logoDiv\">\n                        <Link to=\"/\" className=\"logo\">Bug Tracker</Link>\n                    </div>\n                </section>\n                <section className=\"rightNav\">\n                    <div className=\"loginLogoutSect\">\n                        {!isLoading && !user && (\n                            <div className=\"loggedOutSect\">\n                                <button className=\"navLogIn\" onClick={loginWithRedirect}>Log In</button>\n                            </div>\n                        )}\n                        {!isLoading && user && (\n                            <div className=\"loggedInSect\">\n                                {/* <h2 className=\"navGreeting\">Hello, {user.given_name ? user.given_name : user.nickname}!</h2> */}\n                                <button className=\"navLogOut\" onClick={logout}> Log Out</button>\n                                <Link to=\"/profile\">\n                                    <img className=\"navPicture\" src={user.picture} alt={user.given_name ? user.given_name : user.nickname + \"'s picture\"}></img>\n                                </Link>\n\n                            </div>\n                        )}\n                    </div>\n                </section>\n            </div>\n        </nav>\n    )\n}\n\n\nexport default NavBar;\n","import React, { useEffect, useState } from 'react';\n\nfunction RevealText({ text, maxLength }) {\n    const [hidden, setHidden] = useState(true);\n    if (text.length <= maxLength) {\n        return <span>{text} </span>\n    }\n\n    return (\n        <span>\n            {hidden ? text.substr(0, maxLength) : text + `\\n`}\n            {hidden ? (\n                <a onClick={() => setHidden(false)}> Read more </a>\n            ) : (\n                    <a onClick={() => setHidden(true)}>Read Less</a>\n                )}\n        </span>\n    )\n}\n\nexport default RevealText;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport \"./Home1.scss\";\nimport axios from \"axios\";\n\nconst Home1 = () => {\n\n    const [ currentId, setId ] = useState(0);\n    const { isLoading, user } = useAuth0();\n\n    useEffect(() => {\n        if (user) {\n            axios\n                .get(`http://localhost:5002/api/finduser/${user.email}`)\n                .then(response => setId(response.data.uid))\n                .catch(err => console.log(err))\n        } else {\n            console.log(\"no user yet\")\n        }\n\n    })\n\n    if (isLoading) {\n        return <div>Loading...</div> \n      }\n\n\n    return (\n        <div className=\"home1Mother\">\n            <div className=\"home1Main\">\n                {isLoading && !user && (\n                    <h3>Loading...</h3>\n                )}\n                {!isLoading && !user && (\n                    <h1>Welcome to Bug Tracker!</h1>\n                )}\n\n                {!isLoading && user && (\n                    <div>\n                        <h1>Welcome to Bug Tracker, {user.given_name ? user.given_name : user.nickname}!</h1>\n                        <h3>{currentId}</h3>\n                        <Link to=\"profile\">Profile</Link>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Home1;    ","import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport allActions from \"../../actions/index\";\nimport RevealText from \"../textState\";\nimport Home1 from \"../Home1/Home1\";\n\nconst Home = () => {\n  const counter = useSelector(state => state.reducer);\n  const dispatch = useDispatch();\n\n  return (\n      <div className=\"Home\">\n        <div className=\"homeMain\">\n          <Home1/>\n        </div>\n\n        {/* <h1>Hello World</h1>\n        <h1>Counter: {counter}</h1>\n        <button onClick={() => dispatch(allActions.actions.increment())}>Add!</button>\n        <button onClick={() => dispatch(allActions.actions.decrement())}>Decrease!</button>\n        <RevealText maxLength={15} text=\"howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy \" /> */}\n      </div>\n\n  );\n}\n\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./Profile1.scss\";\n\nconst Profile1 = () => {\n    const { isLoading, user } = useAuth0();\n    const [first, setFirst] = useState(\"\");\n    const [last, setLast] = useState(\"\");\n\n    if (isLoading) {\n        return <div>Loading...</div>\n    }\n\n    const handleSubmit = (e) => {\n        console.log(`Submitting name: ${first} ${last}`);\n        addName();\n        e.preventDefault();\n    }\n\n    const addName = () => {\n        axios\n        .get(`http://localhost:5002/api/addname/${first}/${last}/${user.email}`, { timeout: 200 })\n        .then(response => console.log(response))\n        .catch(err => console.log(err));\n        console.log(`Name changed to: ${first} ${last}`)\n    }\n\n    return (\n        <div className=\"profile1Mother\">\n            <div className=\"profile1Main\">\n                <h1>{user.given_name ? user.given_name : user.nickname}'s Profile</h1>\n                <form onSubmit={handleSubmit} value=\"Submit\">\n                    <input placeholder=\"first name\" type=\"text\" value={first} name=\"firstname\" onChange={e => setFirst(e.target.value)} />\n                    <input placeholder=\"last name\" type=\"text\" value={last} name=\"lastname\" onChange={e => setLast(e.target.value)} />\n                    <input placeholder=\"submit\" type=\"submit\" />\n                </form>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Profile1;","import React from 'react';\nimport Profile1 from \"../Profile1/Profile1\";\n\nconst Profile = () => {    \n    \n    return (\n        <div>\n            <Profile1/>\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport { useAuth0 } from \"../contexts/auth0-context\";\nimport Profile from \"./pages/Profile\";\n\n\nconst AppRouter = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <PrivateRoute path=\"/profile\" component={Profile} />\n    </Switch>\n)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const { user } = useAuth0();\n    console.log(user)\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n\n                user ? \n                ( <Component {...props} /> ) \n                : \n                ( <Redirect to={{ pathname: \"/\" }} /> )\n\n            }\n        />\n    )\n\n\n}\n\n\nexport default AppRouter;","import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport NavBar from \"./components/Navbar/NavBar\";\nimport { useAuth0 } from \"./contexts/auth0-context\";\nimport AppRouter from \"./components/Router\";\nimport './App.css';\n\nconst App = () => {\n\n  const { isLoading, user } = useAuth0();\n\n  if (isLoading) {\n    return <div>Loading...</div> \n  }\n\n  return (\n    <Router> \n      <div className=\"App\">\n        <NavBar />\n        <AppRouter/>\n      </div>\n   </Router>\n\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { Auth0Provider } from \"./contexts/auth0-context\";\n// import config from \"./auth_config.json\";\nimport history from \"./utils/history\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// A function that routes the user to the right place after login.\nconst onRedirectCallback = appState => {\n    history.push(\n        appState && appState.targetUrl\n            ? appState.targetUrl\n            : window.location.pathname\n    )\n}\n\nReactDOM.render(\n    <Auth0Provider>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Auth0Provider>\n\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}