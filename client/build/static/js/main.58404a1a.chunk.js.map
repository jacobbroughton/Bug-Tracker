{"version":3,"sources":["reducers/reducer.js","reducers/index.js","store.js","contexts/auth0-context.js","contexts/issues-context.js","components/Navbar/NavBar.js","components/Home1/Home1.js","components/pages/Home.js","components/Profile1/Profile1.js","components/pages/Profile.js","components/SingleIssue1/SingleIssue1.js","components/pages/SingleIssue.js","components/IssuePost1/IssuePost1.js","components/pages/IssuePost.js","components/AllIssues1/AllIssues1.js","components/pages/AllIssues.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["counter","state","action","type","rootReducer","combineReducers","reducer","store","createStore","axios","require","moment","Auth0Context","createContext","useAuth0","useContext","Auth0Provider","auth0Client","isLoading","isAuthenticated","user","dbUser","statusUrl","config","domain","client_id","redirect_uri","window","location","origin","addUser","newUser","randomNum","date","time","given_name","get","email","family_name","nickname","timeout","then","response","console","log","data","catch","error","findUser","setState","uid","getRandomInt","format","formattedTime","replace","formattedDate","findUserAgain","toJSON","err","initializeAuth0","a","async","createAuth0Client","search","includes","handleRedirectCallback","getUser","history","replaceState","document","title","pathname","this","min","max","Math","ceil","floor","random","children","props","configObject","loginWithRedirect","getTokenSilently","getIdTokenClaims","logout","Provider","value","Component","NavBar","className","to","onClick","src","picture","alt","Home1","Home","Profile1","useState","first","setFirst","last","setLast","company","setCompany","role","setRole","issueArr","setIssueArr","useEffect","reverse","addName","addCompRole","res","onSubmit","e","placeholder","name","onChange","target","length","map","issue","key","issue_title","date_created","time_created","slice","Profile","SingleIssue1","setIssue","newComment","setNewComment","issueUid","openModal","modal","overlay","getElementById","classList","add","closeModal","id","closest","remove","issue_text","data-modal-target","button","querySelector","dataset","modalTarget","formattedUserUid","toString","formattedIssueUid","post","comm_uid","user_uid","issue_uid","comm_text","upvotes","downvotes","preventDefault","SingleIssue","IssuePost","issueTitle","setIssueTitle","issueText","setIssueText","setIssueUid","formattedUid","postIssue","AllIssues1","AllIssues","PrivateRoute","component","rest","render","AppRouter","exact","path","App","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58404a1a.chunk.js","sourcesContent":["const counter = (state = 1, action) => {\n    switch(action.type) {\n        case \"INCREMENT\":\n            return state + 1;\n        case \"DECREMENT\":\n            return state - 1;\n        default: \n            return state;\n    }\n};\n\nexport default counter;","import reducer from \"./reducer.js\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n    reducer\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/index\";\n\n\nconst store = createStore(\n        rootReducer\n    )\n\n    export default store;\n","import React, { Component, createContext, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\nconst axios = require(\"axios\");\nconst moment = require(\"moment\");\n\n// Create the context\nexport const Auth0Context = createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\n\n// Create a provider\nexport class Auth0Provider extends Component {\n\n    state = {\n        auth0Client: null,\n        isLoading: true,\n        isAuthenticated: false,\n        user: null,\n        dbUser: null, \n        statusUrl: \"\"\n    };\n\n    config = {\n        domain: \"jlb1999.auth0.com\",\n        client_id: \"piWchDvXGOycCbEuR95WgYqkX0BvC6cQ\",\n        redirect_uri: window.location.origin\n    };\n\n\n    componentDidMount() {      \n        console.log(this.config)  \n        \n        if(process.env.NODE_ENV === \"development\"){\n            this.setState({ statusUrl: \"http://localhost:5002\" })\n        } else {\n            this.setState({ statusUrl: \"https://bug-tracker-jb.herokuapp.com/\" })\n        }\n        this.initializeAuth0()\n    };\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min\n    }\n\n    addUser = (newUser, randomNum, date, time) => {\n        if (newUser.given_name) {\n            axios\n                .get(`${this.state.statusUrl}/api/newuser/${randomNum}/${newUser.email}/${newUser.given_name}/${newUser.family_name}/${newUser.nickname}/${\"null\"}/${\"null\"}/${date}/${time}`, { timeout: 200 })\n                .then(response => console.log(response.data))\n                .catch(error => console.log(error))\n\n        } else if (newUser.email) {\n            axios\n                .get(`${this.state.statusUrl}/api/newuser/${randomNum}/${newUser.email}/${\"null\"}/${\"null\"}/${newUser.nickname}/${\"null\"}/${\"null\"}/${date}/${time}`, { timeout: 200 })\n                .then(response => console.log(response.data))\n                .catch(error => console.log(error))\n        }\n\n    }\n\n    findUser = (newUser) => {\n        this.setState({ isLoading: true });\n        console.log(newUser)\n        axios\n            .get(`${this.state.statusUrl}/api/finduser/${newUser.email}`)\n            .then(response => {\n                if (response.data === \"\") {\n                    let uid = this.getRandomInt(100000000, 1000000000);\n                    let time = moment().format('LT');\n                    let date = moment().format('L')\n                    let formattedTime = time.replace(/\\s/, \"\")\n                    let formattedDate = date.replace(/\\//g, \"-\")\n                    this.addUser(newUser, uid, formattedDate, formattedTime);\n\n                    this.findUserAgain();\n                    this.setState({ isLoading: false })\n                } else {\n                    console.log(\"User already exists!\");\n                    console.log(response.data);\n                    this.setState({ dbUser: response.data, isLoading: false  });\n                }\n            })\n            .catch(error =>  console.log(error.toJSON()))\n    }\n\n    findUserAgain = () => {\n        const user = this.state.user;\n        if(user) {\n            axios\n                .get(`${this.state.statusUrl}/api/finduser/${user.email}`)\n                .then(response => this.setState({ dbUser: response.data, isLoading: false }))\n                .catch(err => console.log(err))\n\n        } else {\n            console.log(\"no user, cant do it\")\n            this.setState({ isLoading: false })\n        }\n\n\n    }\n\n    // Initialize the auth0 library\n    initializeAuth0 = async () => {\n        const auth0Client = await createAuth0Client(this.config);\n\n        this.setState({ auth0Client });\n\n        // Check to see if they have been redirected after login\n        if (window.location.search.includes(\"code=\")) {\n            return this.handleRedirectCallback();\n        };\n\n        const isAuthenticated = await auth0Client.isAuthenticated();\n        const user = isAuthenticated ? await auth0Client.getUser() : null;\n\n        this.setState({ isAuthenticated, user });\n\n        this.findUserAgain();\n    };\n\n    // Handles the authentication callback\n    handleRedirectCallback = async () => {\n        this.setState({ isLoading: true });\n\n        await this.state.auth0Client.handleRedirectCallback();\n        const user = await this.state.auth0Client.getUser();\n        this.setState({ user, isAuthenticated: true, isLoading: false })\n\n        this.findUser(user);\n        \n        window.history.replaceState({}, document.title, window.location.pathname);\n    };    \n\n\n    render() {\n        const { auth0Client, isLoading, isAuthenticated, user, dbUser, statusUrl} = this.state;\n        const { children } = this.props;\n\n        const configObject = {\n            isLoading,\n            isAuthenticated,\n            user,\n            dbUser,\n            statusUrl,\n            loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n            getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n            getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n            logout: (...p) => auth0Client.logout(...p)\n        };\n\n        return (\n            <Auth0Context.Provider  value={configObject}>\n                    {children}\n            </Auth0Context.Provider>\n        )\n    }\n}","import React, { useContext, useState, createContext } from \"react\";\n\nexport const IssuesContext = createContext();\nexport const useIssues = () => useContext(IssuesContext);\n\nexport const IssuesProvider = props => {\n    const children = props;\n\n\n    const configObj = {\n        test: \"yeet\"\n    }\n\n    return (\n        <IssuesContext.Provider value={configObj}>\n            {/* {children} */}\n        </IssuesContext.Provider>\n    )\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport \"./Navbar.scss\";\n\nconst NavBar = () => {\n\n    const { isLoading, loginWithRedirect, logout, user } = useAuth0();\n\n    return (\n        <nav className=\"navMother\">\n            <div className=\"navMain\">\n                <section className=\"leftNav\">\n                    <div className=\"logoDiv\">\n                        <Link to=\"/\" className=\"logo\">Bug Tracker</Link>\n                    </div>\n                </section>\n                <section className=\"rightNav\">\n                    <div className=\"loginLogoutSect\">\n                        {!isLoading && !user && (\n                            <div className=\"loggedOutSect\">\n                                <button className=\"navLogIn\" onClick={loginWithRedirect}>Log In</button>\n                            </div>\n                        )}\n                        {!isLoading && user && (\n                            <div className=\"loggedInSect\">\n                                {/* <h2 className=\"navGreeting\">Hello, {user.given_name ? user.given_name : user.nickname}!</h2> */}\n                                <button className=\"navLogOut\" onClick={logout}> Log Out</button>\n                                <Link to=\"/profile\">\n                                    <img className=\"navPicture\" src={user.picture} alt={user.given_name ? user.given_name : user.nickname + \"'s picture\"}></img>\n                                </Link>\n\n                            </div>\n                        )}\n                    </div>\n                </section>\n            </div>\n        </nav>\n    )\n}\n\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport \"./Home1.scss\";\nimport axios from \"axios\";\n\nconst Home1 = () => {\n\n    const { isLoading, user, dbUser } = useAuth0();\n\n    return (\n        <div className=\"home1Mother\">\n            <div className=\"home1Main\">\n\n                {!isLoading && !user && (\n                    <h1>Welcome to Bug Tracker!</h1>\n                )}\n                {!isLoading && dbUser && (\n                    <div>\n                        <h1>Welcome to Bug Tracker, {dbUser.given_name != \"null\" ? dbUser.given_name : dbUser.nickname}!</h1>\n                        <Link to=\"/post\">\n                            <button className=\"issuePromptBtn\">\n                                <h3 className=\"issuePromptHead\">Post an issue?</h3>\n                            </button>\n                        </Link>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Home1;    ","import React from 'react';\n// import { useSelector, useDispatch } from \"react-redux\";\n// import allActions from \"../../actions/index\";\n// import RevealText from \"../textState\";\nimport Home1 from \"../Home1/Home1\";\n\nconst Home = () => {\n  // const counter = useSelector(state => state.reducer);\n  // const dispatch = useDispatch();\n\n  return (\n      <div className=\"Home\">\n        <div className=\"homeMain\">\n          <Home1/>\n        </div>\n\n        {/* <h1>Hello World</h1>\n        <h1>Counter: {counter}</h1>\n        <button onClick={() => dispatch(allActions.actions.increment())}>Add!</button>\n        <button onClick={() => dispatch(allActions.actions.decrement())}>Decrease!</button>\n        <RevealText maxLength={15} text=\"howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy \" /> */}\n      </div>\n\n  );\n}\n\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./Profile1.scss\";\n\nconst Profile1 = () => {\n    const { isLoading, user, dbUser, statusUrl } = useAuth0();\n    const [first, setFirst] = useState(\"\");\n    const [last, setLast] = useState(\"\");\n    const [company, setCompany] = useState(\"\");\n    const [role, setRole] = useState(\"\");\n    const [issueArr, setIssueArr] = useState([]);\n    const [reversedArr, setReversedArr] = useState([]);\n\n    const getIssue = (() => {\n        axios\n            .get(`${statusUrl}/api/issues/${dbUser.uid}`)\n            .then(response => setIssueArr(() => [...response.data].reverse()))\n            .catch(err => console.log(err))\n    })\n\n    useEffect(() => {\n        getIssue();\n    }, [])\n\n    if (isLoading) {\n        return <div>Loading...</div>\n    }\n\n    const handleSubmitName = (e) => {\n        console.log(`Submitting name: ${first} ${last}`);\n        addName();\n    }\n\n    const handleSubmitCompRole = (e) => {\n        console.log(`Submitting company and role: ${role} at ${company}`)\n        addCompRole();\n    }\n\n    const addName = () => {\n        axios\n            .get(`${statusUrl}/api/addname/${first}/${last}/${user.email}`, { timeout: 200 })\n            .then(response => console.log(response))\n            .catch(err => console.log(err));\n    }\n\n    const addCompRole = () => {\n        axios\n            .get(`${statusUrl}/api/addcomprole/${company}/${role}/${user.email}`, { timeout: 200 })\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div className=\"profile1Mother\">\n            <div className=\"profile1Main\">\n\n\n                <section className=\"bioSection\">\n                    <img className=\"profilePic\" src={user.picture} alt={dbUser.nickname} />\n\n                    <div className=\"bioInfo\">\n                        <h1 className=\"profileName\">{dbUser.given_name !== \"null\" ? dbUser.given_name : dbUser.nickname}'s Profile</h1>\n\n                        {dbUser.company !== \"null\" && dbUser.role !== \"null\" && (\n                            <h1 className=\"profileRoleComp\">{dbUser.role} at {dbUser.company}</h1>\n                        )}\n                    </div>\n\n\n                    {dbUser.given_name === \"null\" && dbUser.family_name === \"null\" && (\n                        <form onSubmit={handleSubmitName} value=\"Submit\">\n                            <input className=\"profileInput\" placeholder=\"first name\" type=\"text\" value={first} name=\"firstname\" onChange={e => setFirst(e.target.value)} />\n                            <input className=\"profileInput\" placeholder=\"last name\" type=\"text\" value={last} name=\"lastname\" onChange={e => setLast(e.target.value)} />\n                            <input className=\"profileSubmit\" placeholder=\"submit\" type=\"submit\" />\n                        </form>\n                    )} {dbUser.company === \"null\" && dbUser.role === \"null\" && (\n                        <form onSubmit={handleSubmitCompRole} value=\"submit\">\n                            <input className=\"profileInput\" type=\"text\" placeholder=\"Company\" value={company} name=\"company\" onChange={e => setCompany(e.target.value)} />\n                            <input className=\"profileInput\" type=\"text\" placeholder=\"Role\" value={role} name=\"role\" onChange={e => setRole(e.target.value)} />\n                            <input className=\"profileSubmit\" type=\"submit\" placeholder=\"submit\" />\n                        </form>\n                    )}\n                </section>\n\n\n                <div className=\"issuesWrapper\">\n                    <div className=\"issuesDiv\">\n\n                        {issueArr.length <= 5 ?\n                            issueArr.map(issue =>\n                                <div key={issue.uid} className=\"issuePost\">\n                                    <Link to={`/issues/${issue.uid}`}>\n                                        <h2 className=\"issueTitle\">{issue.issue_title}</h2>\n                                    </Link>\n                                    <p className=\"issuePara\">{`${issue.date_created} | ${issue.time_created}`}</p>\n                                </div>\n                            ) :\n                            <div>\n                                {\n                                    issueArr.slice(0, 5).map(issue =>\n                                        <div key={issue.uid} className=\"issuePost\">\n                                            <Link to={`/issues/${issue.uid}`}>\n                                                <h2 className=\"issueTitle\">{issue.issue_title}</h2>\n                                            </Link>\n                                            <p className=\"issuePara\">{`${issue.date_created} | ${issue.time_created}`}</p>\n                                        </div>\n                                    )\n\n                                }\n                                <Link to={`/all/${dbUser.uid}/`}>\n                                    <button className=\"issueViewBtn\">View All</button>\n                                </Link>\n\n                            </div>\n\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Profile1;","import React from 'react';\nimport Profile1 from \"../Profile1/Profile1\";\n\nconst Profile = () => {    \n    \n    return (\n        <div>\n            <Profile1/>\n        </div>\n    )\n}\n\nexport default Profile;","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport moment from \"moment\";\nimport \"./SingleIssue1.scss\";\nimport axios from \"axios\";\n\nconst SingleIssue1 = () => {\n\n    const [issue, setIssue] = useState({});\n    const [newComment, setNewComment] = useState(\"\");\n    const { statusUrl, dbUser } = useAuth0();\n   \n\n    useEffect(() => {\n        let issueUid = window.location.pathname.replace(\"/issues/\", \"\")\n        axios\n            .get(`${statusUrl}/api/getissue/${issueUid}`)\n            .then(response => setIssue(response.data))\n            .catch(err => console.log(err))\n\n    }, [])\n\n    const getRandomInt = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + max)\n    }\n\n\n    const handleDelete = (e) => {\n        const button = e.target;\n        const modal = document.querySelector(button.dataset.modalTarget)\n        openModal(modal)\n    }\n\n    const handleCommentChange = (e) => {\n        setNewComment(e.target.value)\n    }\n\n    const handleSubmit = (e ) => {\n        let issueUid = window.location.pathname.replace(\"/issues/\", \"\")\n        const uid = getRandomInt(10000000, 100000000);\n        const formattedUserUid = dbUser.uid.toString();\n        const formattedIssueUid = issue.uid.toString();\n        let time = moment().format('LT');\n        let date = moment().format('L')\n        let formattedTime = time.replace(/\\s/, \"\")\n        let formattedDate = date.replace(/\\//g, \"-\")\n\n        axios\n        .post(`${statusUrl}/api/addcomment/${issueUid}`, {\n            comm_uid: uid,\n            user_uid: formattedUserUid,\n            issue_uid: formattedIssueUid,\n            comm_text: newComment,\n            date_created: formattedDate, \n            time_created: formattedTime,\n            upvotes: 0,\n            downvotes: 0\n        })\n\n        e.preventDefault();\n    }\n\n    const openModal = (modal) => { \n        const overlay = document.getElementById(\"overlay\");\n        if(modal == null) return;\n        modal.classList.add(\"active\");\n        overlay.classList.add(\"active\");\n    }\n\n    const closeModal = (e, modal) => {\n       const overlay = document.getElementById(\"overlay\"); \n       \n       if(e.target.id === \"modalClose\"){\n\n            const button = e.target;\n            const modal = button.closest('.deleteModal')\n            modal.classList.remove('active');\n            overlay.classList.remove('active');\n        } else {\n            modal.classList.remove('active');\n            overlay.classList.remove('active');\n        }\n    }\n\n    const overlayClose = (e) => {\n        const modal = document.querySelector(\".deleteModal.active\");\n        closeModal(e, modal)\n    }\n\n    const deleteIssue = (e) => {\n       axios\n       .get(`${statusUrl}/api/deleteissue/${issue.uid}`, { timeout: 300 })\n       .then(response => console.log(response))\n       .catch(err => console.log(err))\n    }\n\n    return (\n        <div className=\"singleMother\">\n            <div className=\"singleMain\">\n                <section className=\"titleTextSection\">\n                    <h1 className=\"singleTitle\">{issue.issue_title}</h1>\n                    <p className=\"singleText\">{issue.issue_text}</p>\n                </section>\n\n                <hr></hr>\n\n                <section className=\"descSection\">\n                    <div className=\"deleteDiv\">\n                        <button data-modal-target=\"#deleteModal\" className=\"deleteBtn\" onClick={handleDelete}>\n                            Delete\n                        </button>\n                    </div>\n                    <div className=\"descDiv\">\n                        <p className=\"singleNickname\">{issue.nickname}</p>\n                        <div className=\"dateTime\">\n                            <p className=\"singleTime\">{issue.time_created}</p>\n                            <p className=\"singleDate\">{issue.date_created}</p>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"commentSection\">\n                    <h2 className=\"commentsHead\">Comments</h2>\n                    <form className=\"commentForm\" onSubmit={handleSubmit} type=\"submit\">\n                        <textarea className=\"commentInput\" onChange={handleCommentChange} placeholder=\"Add a informative and helpful comment...\"/>\n                        <input className=\"commentSubmit\" placeholder=\"Submit\" type=\"submit\" />\n                    </form>\n                </section>\n            </div>\n\n\n\n            {/* Delete Modal */}\n            <div id=\"deleteModal\" className=\"deleteModal\">\n                <div className=\"modalHead\">\n                    <h4 className=\"modalTitle\">Notice!</h4>\n                    <button onClick={closeModal} id=\"modalClose\" className=\"modalClose\">&times;</button>\n                </div>\n                <div className=\"modalPara\">If you would like to delete this post, please press the \"Delete\" button. If not, click the \"X\".</div>\n                <Link to={\"/profile\"}>\n                    <button onClick={deleteIssue} className=\"deleteBtn\">Delete</button>\n                    </Link>\n            </div>\n\n            <div onClick={overlayClose} className=\"\" id=\"overlay\"></div>\n        </div>\n    )\n}\n\nexport default SingleIssue1;","import React from \"react\";\nimport SingleIssue1 from \"../SingleIssue1/SingleIssue1\";\n\nconst SingleIssue = () => {\n\n    return (\n        <SingleIssue1 />\n    )\n}\n\nexport default SingleIssue;","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport \"./IssuePost1.scss\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport moment from \"moment\";\n\nconst IssuePost = () => {\n\n    const [issueTitle, setIssueTitle] = useState(\"\");\n    const [issueText, setIssueText] = useState(\"\");\n    const { dbUser, statusUrl } = useAuth0();\n    const [issueUid, setIssueUid] = useState(\"\")\n    const [loading, setLoading] = useState(true);\n      \n    useEffect(() => {\n        console.log(statusUrl)\n    })\n\n\n    const getRandomInt = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + max)\n    }\n\n\n    const postIssue = (uid) => {\n        const formattedUid = uid.toString();\n        const user_uid = dbUser.uid.toString();\n        let time = moment().format('LT');\n        let date = moment().format('L')\n        let formattedTime = time.replace(/\\s/, \"\")\n        let formattedDate = date.replace(/\\//g, \"-\")\n        axios\n            .post(`${statusUrl}/api/issue/post`, {\n                uid: formattedUid,\n                user_uid: user_uid,\n                nickname: dbUser.nickname,\n                issue_title: issueTitle,\n                issue: issueText,\n                date_created: formattedDate,\n                time_created: formattedTime\n            }, { timeout: 300 })\n            .then(response => console.log(response.data))\n            .catch(err => console.log(err))\n    }\n\n    const handleSubmit = (e) => {\n        const uid = getRandomInt(10000000, 100000000);\n        postIssue(uid);\n        setIssueUid(uid);\n        e.preventDefault();\n        // return <Redirect to={`/issues/${uid}`}/>\n        \n    };\n\n    return (\n        <div className=\"issuePost1Mother\">\n            <div className=\"issuePost1Main\">\n                <h1 className=\"issueHead\">Post an issue?</h1>\n                <form id=\"issueForm\" className=\"issueForm\" onSubmit={handleSubmit}>\n                    <input className=\"issueTitleInput\" placeholder=\"Title your issue...\" type=\"text\" value={issueTitle} onChange={e => setIssueTitle(e.target.value)} />\n                    <textarea className=\"issueTextInput\" value={issueText} type=\"text\" placeholder=\"Explain your issue...\" onChange={e => setIssueText(e.target.value)} />\n                    {/* <Link to={`/issues/${uid}`}> */}\n                        <input className=\"issueSubmit\" type=\"submit\" />\n                    {/* </Link> */}\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default IssuePost;","import React from \"react\";\nimport IssuePost1 from \"../IssuePost1/IssuePost1\";\n\nconst IssuePost = () => {\n    return (\n        <div>\n            <IssuePost1/>\n        </div>\n    )\n}\n\nexport default IssuePost;","import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./AllIssues1.scss\";\n\nconst AllIssues1 = () => {\n\n    const { isLoading, user, dbUser, statusUrl } = useAuth0();\n    const [issueArr, setIssueArr] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get(`${statusUrl}/api/issues/${dbUser.uid}`)\n            .then(response => setIssueArr([...response.data]))\n            .catch(err => console.log(err))\n    }, [])\n\n    if (isLoading) {\n\n        return (\n            <div>Loading...</div>\n        )\n    }\n\n    return (\n        <div>\n            <section className=\"bioSection\">\n                <img className=\"profilePic\" src={user.picture} alt={dbUser.nickname} />\n\n                <div className=\"bioInfo\">\n                    <h1 className=\"profileName\">{dbUser.given_name !== \"null\" ? dbUser.given_name : dbUser.nickname}'s Profile</h1>\n\n                    {dbUser.company !== \"null\" && dbUser.role !== \"null\" && (\n                        <h1 className=\"profileRoleComp\">{dbUser.role} at {dbUser.company}</h1>\n                    )}\n                </div>\n            </section>\n            <section className=\"issuesSection\">\n                {\n                            issueArr.reverse().map(issue =>\n                                <div key={issue.uid} className=\"issuePost\">\n                                    {console.log(\"not slicing\")}\n                                    <Link to={`/issues/${issue.uid}`}>\n                                        <h2 className=\"issueTitle\">{issue.issue_title}</h2>\n                                    </Link>\n                                    <p className=\"issuePara\">{`${issue.date_created} | ${issue.time_created}`}</p>\n                                </div>\n                            )\n                }\n            </section>\n        </div>\n\n    )\n}\n\nexport default AllIssues1;","import React from \"react\";\nimport AllIssues1 from \"../AllIssues1/AllIssues1\";\n\nconst AllIssues = () => {\n\n    return (\n        <div>\n            <AllIssues1/>\n        </div>\n    )\n}\n\nexport default AllIssues;","import React from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport { useAuth0 } from \"../contexts/auth0-context\";\nimport Profile from \"./pages/Profile\";\nimport SingleIssue from \"./pages/SingleIssue\"\nimport IssuePost from \"./pages/IssuePost\";\nimport AllIssues from \"./pages/AllIssues\";\n\n\nconst AppRouter = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/post\" component={IssuePost}/>\n        <Route path=\"/issues/:issueuid\" component={SingleIssue}/>\n        <Route path=\"/all/:useruid\" component={AllIssues}/>\n        <PrivateRoute path=\"/profile\" component={Profile} />\n    </Switch>\n)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const { user } = useAuth0();\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                user ? \n                ( <Component {...props} /> ) \n                : \n                ( <Redirect to={{ pathname: \"/\" }} /> )\n\n            }\n        />\n    )\n}\n\n\nexport default AppRouter;","import React from 'react';\n// import { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport NavBar from \"./components/Navbar/NavBar\";\nimport { useAuth0 } from \"./contexts/auth0-context\";\nimport AppRouter from \"./components/Router\";\nimport './App.css';\n\nconst App = () => {\n\n  const { isLoading, user } = useAuth0();\n\n  if (isLoading) {\n    return <div>Loading...</div> \n  }\n  \n\n  return (\n    <Router> \n      <div className=\"App\">\n        <NavBar />\n        <AppRouter/>\n      </div>\n   </Router>\n\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { Auth0Provider } from \"./contexts/auth0-context\";\nimport { IssuesProvider } from \"./contexts/issues-context\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import { usePromiseTracker } from \"react-promise-tracker\";\n\n\nReactDOM.render(\n    <Auth0Provider>\n        {/* <IssuesProvider> */}\n            <Provider store={store}>\n                <App />\n            </Provider>\n        {/* </IssuesProvider> */}\n    </Auth0Provider>\n\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}