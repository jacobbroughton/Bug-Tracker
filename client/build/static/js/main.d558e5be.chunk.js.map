{"version":3,"sources":["reducers/reducer.js","reducers/index.js","store.js","contexts/auth0-context.js","components/Navbar/NavBar.js","components/Home1/Home1.js","components/pages/Home.js","components/Profile1/Profile1.js","components/pages/Profile.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["counter","state","action","type","rootReducer","combineReducers","reducer","store","createStore","axios","require","moment","Auth0Context","createContext","useAuth0","useContext","Auth0Provider","auth0Client","isLoading","isAuthenticated","user","dbUser","config","domain","process","client_id","redirect_uri","window","location","origin","addUser","newUser","randomNum","date","time","console","log","given_name","get","email","family_name","nickname","timeout","then","response","data","catch","error","findUser","setState","uid","getRandomInt","format","formattedTime","replace","formattedDate","findUserAgain","toJSON","err","initializeAuth0","a","async","createAuth0Client","search","includes","handleRedirectCallback","getUser","history","replaceState","document","title","pathname","this","min","max","Math","ceil","floor","random","children","props","configObject","loginWithRedirect","getTokenSilently","getIdTokenClaims","logout","Provider","value","Component","NavBar","className","to","onClick","src","picture","alt","Home1","Home","Profile1","useState","first","setFirst","last","setLast","company","setCompany","role","setRole","addName","addCompRole","res","onSubmit","e","placeholder","name","onChange","target","Profile","PrivateRoute","component","rest","render","AppRouter","exact","path","App","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d558e5be.chunk.js","sourcesContent":["const counter = (state = 1, action) => {\n    switch(action.type) {\n        case \"INCREMENT\":\n            return state + 1;\n        case \"DECREMENT\":\n            return state - 1;\n        default: \n            return state;\n    }\n};\n\nexport default counter;","import reducer from \"./reducer.js\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n    reducer\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/index\";\n\n\nconst store = createStore(\n        rootReducer\n    )\n\n    export default store;\n","import React, { Component, createContext, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\nconst axios = require(\"axios\");\nconst moment = require(\"moment\");\n\n// Create the context\nexport const Auth0Context = createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\n\n// Create a provider\nexport class Auth0Provider extends Component {\n\n    state = {\n        auth0Client: null,\n        isLoading: true,\n        isAuthenticated: false,\n        user: null,\n        dbUser: null\n    };\n\n    config = {\n        domain: process.env.REACT_APP_AUTH0_DOMAIN,\n        client_id: process.env.REACT_APP_AUTH0_CLIENT_ID,\n        redirect_uri: window.location.origin\n    };\n\n\n    componentDidMount() {\n        this.initializeAuth0()\n    };\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min\n    }\n\n    addUser = (newUser, randomNum, date, time) => {\n        console.log(newUser)\n        console.log(typeof(randomNum))\n        console.log(typeof(date));\n        console.log(typeof(time))\n        if (newUser.given_name) {\n            axios\n                .get(`http://localhost:5002/api/newuser/${randomNum}/${newUser.email}/${newUser.given_name}/${newUser.family_name}/${newUser.nickname}/${\"null\"}/${\"null\"}/${date}/${time}`, { timeout: 200 })\n                .then(response => console.log(response.data))\n                .catch(error => console.log(error))\n\n        } else if (newUser.email) {\n            axios\n                .get(`http://localhost:5002/api/newuser/${randomNum}/${newUser.email}/${\"null\"}/${\"null\"}/${newUser.nickname}/${\"null\"}/${\"null\"}/${date}/${time}`, { timeout: 200 })\n                .then(response => console.log(response.data))\n                .catch(error => console.log(error))\n        }\n\n    }\n\n    findUser = (newUser) => {\n        this.setState({ isLoading: true });\n        console.log(newUser)\n        axios\n            .get(`http://localhost:5002/api/finduser/${newUser.email}`)\n            .then(response => {\n                if (response.data === \"\") {\n                    let uid = this.getRandomInt(100000000, 1000000000);\n                    let time = moment().format('LT');\n                    let date = moment().format('L')\n                    let formattedTime = time.replace(/\\s/, \"\")\n                    let formattedDate = date.replace(/\\//g, \"-\")\n                    this.addUser(newUser, uid, formattedDate, formattedTime);\n\n                    this.findUserAgain();\n                    this.setState({ isLoading: false })\n                } else {\n                    console.log(\"User already exists!\");\n                    console.log(response.data);\n                    this.setState({ dbUser: response.data, isLoading: false  });\n                }\n            })\n            .catch(error =>  console.log(error.toJSON()))\n    }\n\n    findUserAgain = () => {\n        const user = this.state.user;\n        console.log(user)\n        if(user) {\n            axios\n                .get(`http://localhost:5002/api/finduser/${user.email}`)\n                .then(response => this.setState({ dbUser: response.data, isLoading: false }))\n                .catch(err => console.log(err))\n        } else {\n            console.log(\"no user, cant do it\")\n            this.setState({ isLoading: false })\n        }\n    }\n\n    // Initialize the auth0 library\n    initializeAuth0 = async () => {\n        const auth0Client = await createAuth0Client(this.config);\n\n        this.setState({ auth0Client });\n\n        // Check to see if they have been redirected after login\n        if (window.location.search.includes(\"code=\")) {\n            return this.handleRedirectCallback();\n        };\n\n        const isAuthenticated = await auth0Client.isAuthenticated();\n        const user = isAuthenticated ? await auth0Client.getUser() : null;\n\n        this.setState({ isAuthenticated, user });\n\n        this.findUserAgain();\n    };\n\n    // Handles the authentication callback\n    handleRedirectCallback = async () => {\n        this.setState({ isLoading: true });\n\n        await this.state.auth0Client.handleRedirectCallback();\n        const user = await this.state.auth0Client.getUser();\n        this.setState({ user, isAuthenticated: true, isLoading: false })\n\n        this.findUser(user);\n        \n        window.history.replaceState({}, document.title, window.location.pathname);\n    };    \n\n\n    render() {\n        const { auth0Client, isLoading, isAuthenticated, user, dbUser } = this.state;\n        const { children } = this.props;\n\n        const configObject = {\n            isLoading,\n            isAuthenticated,\n            user,\n            dbUser,\n\n            loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n            getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n            getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n            logout: (...p) => auth0Client.logout(...p)\n        };\n\n        return (\n            <Auth0Context.Provider  value={configObject}>\n                    {children}\n            </Auth0Context.Provider>\n        )\n    }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport \"./Navbar.scss\";\n\nconst NavBar = () => {\n\n    const { isLoading, loginWithRedirect, logout, user } = useAuth0();\n\n    return (\n        <nav className=\"navMother\">\n            <div className=\"navMain\">\n                <section className=\"leftNav\">\n                    <div className=\"logoDiv\">\n                        <Link to=\"/\" className=\"logo\">Bug Tracker</Link>\n                    </div>\n                </section>\n                <section className=\"rightNav\">\n                    <div className=\"loginLogoutSect\">\n                        {!isLoading && !user && (\n                            <div className=\"loggedOutSect\">\n                                <button className=\"navLogIn\" onClick={loginWithRedirect}>Log In</button>\n                            </div>\n                        )}\n                        {!isLoading && user && (\n                            <div className=\"loggedInSect\">\n                                {/* <h2 className=\"navGreeting\">Hello, {user.given_name ? user.given_name : user.nickname}!</h2> */}\n                                <button className=\"navLogOut\" onClick={logout}> Log Out</button>\n                                <Link to=\"/profile\">\n                                    <img className=\"navPicture\" src={user.picture} alt={user.given_name ? user.given_name : user.nickname + \"'s picture\"}></img>\n                                </Link>\n\n                            </div>\n                        )}\n                    </div>\n                </section>\n            </div>\n        </nav>\n    )\n}\n\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport \"./Home1.scss\";\nimport axios from \"axios\";\n\nconst Home1 = () => {\n\n    const { isLoading, user, dbUser } = useAuth0();\n\n    return (\n        <div className=\"home1Mother\">\n            <div className=\"home1Main\">\n\n                {!isLoading && !user && (\n                    <h1>Welcome to Bug Tracker!</h1>\n                )}\n                {!isLoading && dbUser && (\n                    <div>\n                        <div>{dbUser.email}</div>\n                        <h1>Welcome to Bug Tracker, {dbUser.given_name != \"null\" ? dbUser.given_name : dbUser.nickname}!</h1>\n                        <Link to=\"profile\">Profile</Link>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Home1;    ","import React from 'react';\n// import { useSelector, useDispatch } from \"react-redux\";\n// import allActions from \"../../actions/index\";\n// import RevealText from \"../textState\";\nimport Home1 from \"../Home1/Home1\";\n\nconst Home = () => {\n  // const counter = useSelector(state => state.reducer);\n  // const dispatch = useDispatch();\n\n  return (\n      <div className=\"Home\">\n        <div className=\"homeMain\">\n          <Home1/>\n        </div>\n\n        {/* <h1>Hello World</h1>\n        <h1>Counter: {counter}</h1>\n        <button onClick={() => dispatch(allActions.actions.increment())}>Add!</button>\n        <button onClick={() => dispatch(allActions.actions.decrement())}>Decrease!</button>\n        <RevealText maxLength={15} text=\"howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy howdy \" /> */}\n      </div>\n\n  );\n}\n\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./Profile1.scss\";\n\nconst Profile1 = () => {\n    const { isLoading, user, dbUser} = useAuth0();\n    const [first, setFirst] = useState(\"\");\n    const [last, setLast] = useState(\"\");\n    const [company, setCompany] = useState(\"\");\n    const [role, setRole] = useState(\"\");\n\n    if (isLoading) {\n        return <div>Loading...</div>\n    }\n\n    const handleSubmitName = (e) => {\n        console.log(`Submitting name: ${first} ${last}`);\n        addName();\n    }\n\n    const handleSubmitCompRole = (e) => {\n        console.log(`Submitting company and role: ${role} at ${company}`)\n        addCompRole();\n    }\n\n    const addName = () => {\n        axios\n            .get(`http://localhost:5002/api/addname/${first}/${last}/${user.email}`, { timeout: 200 })\n            .then(response => console.log(response))\n            .catch(err => console.log(err));\n    }\n\n    const addCompRole = () => {\n        axios\n            .get(`http://localhost:5002/api/addcomprole/${company}/${role}/${user.email}`, { timeout: 200 })\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div className=\"profile1Mother\">\n            <div className=\"profile1Main\">\n                    <h1>{dbUser.given_name !== \"null\" ? dbUser.given_name : dbUser.nickname}'s Profile</h1>\n                    {dbUser.company !== \"null\" && dbUser.role !== \"null\" &&( \n                        <h1>{dbUser.role} at {dbUser.company}</h1>\n                    )}\n                    {dbUser.given_name === \"null\" && dbUser.family_name === \"null\" && (\n                        <form onSubmit={handleSubmitName} value=\"Submit\">\n                            <input className=\"profileInput\" placeholder=\"first name\" type=\"text\" value={first} name=\"firstname\" onChange={e => setFirst(e.target.value)} />\n                            <input className=\"profileInput\" placeholder=\"last name\" type=\"text\" value={last} name=\"lastname\" onChange={e => setLast(e.target.value)} />\n                            <input className=\"profileSubmit\" placeholder=\"submit\" type=\"submit\" />\n                        </form>\n                    )} {dbUser.company === \"null\" && dbUser.role === \"null\" && (\n                        <form onSubmit={handleSubmitCompRole} value=\"submit\">\n                            <input className=\"profileInput\" type=\"text\" placeholder=\"Company\" value={company} name=\"company\" onChange={e => setCompany(e.target.value)}/>\n                            <input className=\"profileInput\" type=\"text\" placeholder=\"Role\" value={role} name=\"role\" onChange={e => setRole(e.target.value)}/>\n                            <input className=\"profileSubmit\" type=\"submit\" placeholder=\"submit\" />\n                        </form>\n                    )\n\n                    }\n            </div>\n        </div>\n\n    )\n}\n\nexport default Profile1;","import React from 'react';\nimport Profile1 from \"../Profile1/Profile1\";\n\nconst Profile = () => {    \n    \n    return (\n        <div>\n            <Profile1/>\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport { useAuth0 } from \"../contexts/auth0-context\";\nimport Profile from \"./pages/Profile\";\n\n\nconst AppRouter = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <PrivateRoute path=\"/profile\" component={Profile} />\n    </Switch>\n)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const { user } = useAuth0();\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                user ? \n                ( <Component {...props} /> ) \n                : \n                ( <Redirect to={{ pathname: \"/\" }} /> )\n\n            }\n        />\n    )\n}\n\n\nexport default AppRouter;","import React from 'react';\n// import { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport NavBar from \"./components/Navbar/NavBar\";\nimport { useAuth0 } from \"./contexts/auth0-context\";\nimport AppRouter from \"./components/Router\";\nimport './App.css';\n\nconst App = () => {\n\n  const { isLoading, user } = useAuth0();\n\n  if (isLoading) {\n    return <div>Loading...</div> \n  }\n  \n\n  return (\n    <Router> \n      <div className=\"App\">\n        <NavBar />\n        <AppRouter/>\n      </div>\n   </Router>\n\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { Auth0Provider } from \"./contexts/auth0-context\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import { usePromiseTracker } from \"react-promise-tracker\";\n\n\nReactDOM.render(\n    <Auth0Provider>\n            <Provider store={store}>\n                <App />\n            </Provider>\n    </Auth0Provider>\n\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}